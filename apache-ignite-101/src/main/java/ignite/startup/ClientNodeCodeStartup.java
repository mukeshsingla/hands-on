package ignite.startup;

import ignite.config.ClientConfigurationFactory;
import org.apache.ignite.Ignite;
import org.apache.ignite.Ignition;
import org.apache.ignite.cluster.ClusterGroup;
import org.apache.ignite.cluster.ClusterNode;

/** This file was generated by Ignite Web Console (04/08/2020, 23:33) **/
public class ClientNodeCodeStartup {

    private static Ignite ignite;
    /**
     * Start up node with specified configuration.
     * 
     * @param args Command line arguments, none required.
     * @throws Exception If failed.
     **/
    public static void main(String[] args) throws Exception {
        ignite = Ignition.start(ClientConfigurationFactory.createConfiguration());
        ClusterGroup clusterGroup = ignite.cluster();
        ClusterGroup serversClusterGroup = ignite.cluster().forServers();

        printClusterNodes(clusterGroup, "all");
        printClusterNodes(serversClusterGroup, "servers only");

        printMetrics(serversClusterGroup, "servers only");

        ignite.close();
    }

    protected static void printClusterNodes(ClusterGroup clusterGroup, String groupType) {
        ClusterGroup flightOpsNodes = clusterGroup.forAttribute("ROLE", "FlightOperations");
        System.out.println(String.format("Flight Operations Nodes[%s]: ", groupType));
        for (ClusterNode node : flightOpsNodes.nodes()) {
            System.out.println(node.id());
        }
        ClusterGroup flightReservationsNodes = clusterGroup.forAttribute("ROLE", "FlightReservations");
        System.out.println(String.format("Flight Reservations Nodes[%s]: ", groupType));
        for (ClusterNode node : flightReservationsNodes.nodes()) {
            System.out.println(node.id());
        }
        System.out.println();
    }
    protected static void printMetrics(ClusterGroup clusterGroup, String groupType) {
        for (ClusterNode node : clusterGroup.nodes()) {
            System.out.println(String.format("Node[%s] id: %s, start time: %d", groupType, node.id(), node.metrics().getStartTime()));
        }
        System.out.println();
    }
}